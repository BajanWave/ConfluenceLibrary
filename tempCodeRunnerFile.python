#making a script to access confluence
import requests
from requests.auth import HTTPBasicAuth
import json
from bs4 import BeautifulSoup

def get_confluence_page(page_id, base_url, auth):
    """
    Fetches a Confluence page by its ID using API v2.

    :param page_id: The ID of the Confluence page to fetch.
    :param base_url: The base URL of the Confluence instance.
    :param auth: A tuple containing the username and password for authentication.
    :return: The JSON response containing the page data.
    """
    url = f"{base_url}/wiki/api/v2/pages/{page_id}"
    headers = {
        "Accept": "application/json"
    }
    params = {
        "body-format": "storage" # Specify the body format if needed
    }
    response = requests.get(url, headers=headers, auth=auth, params=params)
    
    if response.status_code == 200:
        with open("confluence_page.json", "w") as file:
            json.dump(response.json().get("body", {}).get("storage").get("value", ""), file, indent=4)
        return response.json()
    else:
        response.raise_for_status()  # Raise an error for bad responses

def display_confluence_page_table(file_path):
    """
    Reads and displays the table content of a Confluence page stored in a JSON file.

    :param file_path: The path to the JSON file containing the Confluence page content.
    """
    try:
        with open(file_path, "r") as file:
            content = json.load(file)
            print("Extracting table from Confluence Page Content...")
                    
            # Assuming the content is HTML, parse it to extract the table
            soup = BeautifulSoup(content, "html.parser")
            tables = soup.find_all("table")
                    
            if not tables:
                print("No tables found in the content.")
                return
                    
            for idx, table in enumerate(tables, start=1):
                print(f"\nTable {idx}:")
                for row in table.find_all("tr"):
                    cells = [cell.get_text(strip=True) for cell in row.find_all(["td", "th"])]
                    print("\t".join(cells))
    except FileNotFoundError:
        print(f"File not found: {file_path}")
    except json.JSONDecodeError:
        print(f"Error decoding JSON from file: {file_path}")
    except Exception as e:
        print(f"An error occurred: {e}")

def main():
    # Example usage
    base_url = "https://jwyschool.atlassian.net"
    page_id = "65852"  # Page ID extracted from the URL
    auth = HTTPBasicAuth("username", "token")  # Replace with your username and API token
    print("Fetching Confluence page data...")

    try:
        page_data = get_confluence_page(page_id, base_url, auth)
        print(json.dumps(page_data, indent=4))  # Pretty print the JSON response
        display_confluence_page_table("confluence_page.json")
        
    except requests.exceptions.RequestException as e:
        print(f"An error occurred: {e}")

if __name__ == "__main__":
    main()
